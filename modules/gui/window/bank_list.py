# -*- coding: utf-8 -*-
import os
from datetime import datetime

# Form implementation generated from reading ui file 'bank_list.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QMessageBox

from modules.db.db_connection import Database



class Ui_Dialog(object):

    def __init__(self, logger, user, db_path):
        self.logger = logger
        self.user = user
        self.db_path = db_path
        self.model = None

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 443)
        Dialog.setStyleSheet("QDialog {\n"
"    background-color:#93a5a7\n"
"}  QAbstractItemView {font-size: 18px}")
        self.banks_list = QtWidgets.QListView(Dialog)
        self.banks_list.setGeometry(QtCore.QRect(10, 70, 381, 361))
        self.banks_list.setStyleSheet("background-color: #bec9ca;\n"
"border: 1px solid #93a5a7;\n"
"border-radius: 2px;")
        self.banks_list.setObjectName("banks_list")
        self.banks_list.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)

        # Заполянем лист данными из БД
        self.db = Database(self)
        self.load_banks()

        self.widget = QtWidgets.QWidget(Dialog)
        self.widget.setGeometry(QtCore.QRect(30, 20, 331, 32))
        self.widget.setObjectName("widget")
        self.find_Layout = QtWidgets.QHBoxLayout(self.widget)
        self.find_Layout.setContentsMargins(0, 0, 0, 0)
        self.find_Layout.setSpacing(20)
        self.find_Layout.setObjectName("find_Layout")

        self.find = QtWidgets.QLineEdit(self.widget)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(15)
        self.find.setFont(font)
        self.find.setObjectName("find")
        self.find.textChanged.connect(self.filter_list)
        self.find_Layout.addWidget(self.find)

        self.add_bank_btn = QtWidgets.QToolButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_bank_btn.sizePolicy().hasHeightForWidth())
        self.add_bank_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.add_bank_btn.setFont(font)
        self.add_bank_btn.setObjectName("add_bank_btn")
        self.add_bank_btn.clicked.connect(self.add_new_bank)
        self.find_Layout.addWidget(self.add_bank_btn)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def load_banks(self):
        self.item_list = self.db.get_banks(self.db_path, self.logger, self.user)
        if self.model is None:
            self.model = QtCore.QStringListModel(self.banks_list)
        self.model.setStringList(self.item_list)
        self.banks_list.setModel(self.model)

    def filter_list(self):
        search_term = self.find.text().lower()
        filtered_items = [item for item in self.item_list if search_term in item.lower()]
        self.model = QtCore.QStringListModel(filtered_items, self.banks_list)
        self.banks_list.setModel(self.model)

    def add_new_bank(self):
        new_bank, ok = QInputDialog.getText(None, "Новый банк", "Введите название нового банка:")
        if ok:
            new_bank = new_bank.upper()
            if new_bank in ('СБЕРБАНК', 'СБЕР', '9038', '9040', 'ПАО СБЕРБАНК', 'ВТБ'):
                QMessageBox.critical(None, "Ошибка", 'Такой банк уже существует!')
                return

            if self.db.add_bank(self.db_path, self.logger, self.user, new_bank):
                self.logger.info(
                    f'\n[NEW_BANK] {str(datetime.today().strftime("%Y-%m-%d %H:%M:%S"))} - Банк {new_bank} успешно добавлен пользователем {self.user}')
                self.item_list = self.db.get_banks(self.db_path, self.logger, self.user)
                self.model = QtCore.QStringListModel(self.item_list, self.banks_list)
                self.banks_list.setModel(self.model)
            else:
                QMessageBox.critical(None, "Ошибка", 'Такой банк уже существует!')


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Поиск"))
        self.find.setPlaceholderText(_translate("Dialog", "Поиск"))
        self.add_bank_btn.setText(_translate("Dialog", "Новый Банк"))




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())

